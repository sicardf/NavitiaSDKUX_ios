//
//  ListPlacesInteractor.swift
//  Pods
//
//  Created by Flavien Sicard on 30/01/2019.
//  Copyright (c) 2019 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListPlacesBusinessLogic
{
  func fetchJourneys(request: ListPlaces.FetchPlaces.Request)
}

protocol ListPlacesDataStore
{
  //var name: String { get set }
}

class ListPlacesInteractor: ListPlacesBusinessLogic, ListPlacesDataStore
{
    var presenter: ListPlacesPresentationLogic?
    var navitiaWorker = NavitiaWorker()
    var places: Places?
  //var name: String = ""
  
  // MARK: - Fetch Places
  
  func fetchJourneys(request: ListPlaces.FetchPlaces.Request)
  {
    navitiaWorker.fetchPlaces(q: request.q, coord: request.coord) { (places) in
        self.places = places
        
        let response = ListPlaces.FetchPlaces.Response(places: places)
        self.presenter?.presentSomething(response: response)
    }
//    worker = ListPlacesWorker()
//    worker?.doSomeWork()
//
//    let response = ListPlaces.FetchPlaces.Response()
//    presenter?.presentSomething(response: response)
  }
    
    
    
//    // MARK: - Fetch Journey
//
//    func fetchJourneys(request: ListJourneys.FetchJourneys.Request) {
//        presenter?.presentFetchedSearchInformation(journeysRequest: request.journeysRequest)
//
//        navitiaWorker.fetchJourneys(journeysRequest: request.journeysRequest) { (journeys, ridesharings, disruptions, notes, context) in
//            self.journeys = journeys
//            self.ridesharingJourneys = ridesharings
//            self.disruptions = disruptions
//            self.notes = notes
//            self.context = context
//
//            let response = ListJourneys.FetchJourneys.Response(journeysRequest: request.journeysRequest,
//                                                               journeys: (journeys, withRidesharing: ridesharings),
//                                                               disruptions: disruptions)
//
//            self.presenter?.presentFetchedJourneys(response: response)
//        }
//    }
}
