//
// StopDateTime.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

open class StopDateTime: JSONEncodable, Mappable {

    public enum AdditionalInformations: String { 
        case pickUpOnly = "pick_up_only"
        case dropOffOnly = "drop_off_only"
        case onDemandTransport = "on_demand_transport"
        case dateTimeEstimated = "date_time_estimated"
    }
    public var stopPoint: StopPoint?
    public var links: [LinkSchema]?
    public var arrivalDateTime: String?
    public var additionalInformations: [AdditionalInformations]?
    public var departureDateTime: String?
    public var baseArrivalDateTime: String?
    public var baseDepartureDateTime: String?
    public var dataFreshness: String?

    public init() {}
    required public init?(map: Map) {

    }


    public func mapping(map: Map) {
        stopPoint <- map["stop_point"]
        links <- map["links"]
        arrivalDateTime <- map["arrival_date_time"]
        additionalInformations <- map["additional_informations"]
        departureDateTime <- map["departure_date_time"]
        baseArrivalDateTime <- map["base_arrival_date_time"]
        baseDepartureDateTime <- map["base_departure_date_time"]
        dataFreshness <- map["data_freshness"]
    }

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["stop_point"] = self.stopPoint?.encodeToJSON()
        nillableDictionary["links"] = self.links?.encodeToJSON()
        nillableDictionary["arrival_date_time"] = self.arrivalDateTime
        nillableDictionary["additional_informations"] = self.additionalInformations?.map({$0.rawValue}).encodeToJSON()
        nillableDictionary["departure_date_time"] = self.departureDateTime
        nillableDictionary["base_arrival_date_time"] = self.baseArrivalDateTime
        nillableDictionary["base_departure_date_time"] = self.baseDepartureDateTime
        nillableDictionary["data_freshness"] = self.dataFreshness

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
