//
// Place.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

open class Place: JSONEncodable, Mappable {

    public var embeddedType: String?
    public var stopPoint: StopPoint?
    public var administrativeRegion: Admin?
    /** Name of the object */
    public var name: String?
    public var address: Address?
    public var poi: Poi?
    public var quality: Int32?
    /** Identifier of the object */
    public var id: String?
    public var stopArea: StopArea?

    public init() {}
    required public init?(map: Map) {

    }


    public func mapping(map: Map) {
        embeddedType <- map["embedded_type"]
        stopPoint <- map["stop_point"]
        administrativeRegion <- map["administrative_region"]
        name <- map["name"]
        address <- map["address"]
        poi <- map["poi"]
        quality <- map["quality"]
        id <- map["id"]
        stopArea <- map["stop_area"]
    }

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["embedded_type"] = self.embeddedType
        nillableDictionary["stop_point"] = self.stopPoint?.encodeToJSON()
        nillableDictionary["administrative_region"] = self.administrativeRegion?.encodeToJSON()
        nillableDictionary["name"] = self.name
        nillableDictionary["address"] = self.address?.encodeToJSON()
        nillableDictionary["poi"] = self.poi?.encodeToJSON()
        nillableDictionary["quality"] = self.quality?.encodeToJSON()
        nillableDictionary["id"] = self.id
        nillableDictionary["stop_area"] = self.stopArea?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
