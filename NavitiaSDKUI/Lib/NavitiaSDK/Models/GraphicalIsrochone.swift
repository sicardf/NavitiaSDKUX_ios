//
// GraphicalIsrochone.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

open class GraphicalIsrochone: JSONEncodable, Mappable {

    public var maxDuration: Int32?
    public var from: Place?
    public var geojson: GraphicalIsrochoneGeojson?
    public var minDuration: Int32?
    public var minDateTime: String?
    public var to: Place?
    public var requestedDateTime: String?
    public var maxDateTime: String?

    public init() {}
    required public init?(map: Map) {

    }


    public func mapping(map: Map) {
        maxDuration <- map["max_duration"]
        from <- map["from"]
        geojson <- map["geojson"]
        minDuration <- map["min_duration"]
        minDateTime <- map["min_date_time"]
        to <- map["to"]
        requestedDateTime <- map["requested_date_time"]
        maxDateTime <- map["max_date_time"]
    }

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["max_duration"] = self.maxDuration?.encodeToJSON()
        nillableDictionary["from"] = self.from?.encodeToJSON()
        nillableDictionary["geojson"] = self.geojson?.encodeToJSON()
        nillableDictionary["min_duration"] = self.minDuration?.encodeToJSON()
        nillableDictionary["min_date_time"] = self.minDateTime
        nillableDictionary["to"] = self.to?.encodeToJSON()
        nillableDictionary["requested_date_time"] = self.requestedDateTime
        nillableDictionary["max_date_time"] = self.maxDateTime

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
